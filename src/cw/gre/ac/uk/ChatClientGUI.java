package cw.gre.ac.uk;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

public class ChatClientGUI extends JFrame {
    private final ChatClient client;

    //    private static ChatClient chatClient;
    private JPanel mainWindow;

    //
//    public ChatClientGUI(ChatClient chatClient) {
//        if (chatClient.user == null) {
//            LoginGUI loginGui = new LoginGUI(chatClient);
//            loginGui.setNotification(chatClient.serverResponse);
//        } else {
//            this.chatClient = chatClient;
//            setContentPane(mainWindow);
//            setTitle("Main window.");
//            setSize(850, 400);
//            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
//            setVisible(true);
//        }
//    }
    public ChatClientGUI() throws IOException {
        this.client = new ChatClient("localhost", 1111);
        if (!client.connect()) {
            System.err.println("Error");
        } else {
            System.out.println("succes");
            LoginGUI loginGui = new LoginGUI(client);
            loginGui.setNotification(client.serverResponse);
        }
//        client.connect();
//        System.out.println("KODEL ??");
//        if (client.isConnectedToTheServer == true) {
//            LoginGUI loginGui = new LoginGUI(client);
//            loginGui.setNotification(client.serverResponse);
//        }
    }

    public static void main(String[] args) throws IOException {
        ChatClientGUI loginGUI = new ChatClientGUI();

    }
//    public static void main(String[] args) {
//        if (chatClient.user == null) {
//            LoginGUI loginGui = new LoginGUI(chatClient);
//        }
//    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainWindow = new JPanel();
        mainWindow.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainWindow.setBackground(new Color(-2557466));
        final JLabel label1 = new JLabel();
        label1.setText("WELCOME");
        mainWindow.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        mainWindow.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainWindow;
    }

}
